{"ast":null,"code":"const getImage=file=>{return new Promise((resolve,reject)=>{if(!file){reject(new Error(\"No file provided\"));return;}const reader=new FileReader();reader.readAsDataURL(file);reader.onload=e=>{resolve(e.target.result);};reader.onerror=error=>{reject(error);};});};const filterCriteria=(item,field,type)=>{if(type===''||type==='unspecified')return true;else return item[field]===type;};const searchCriteria=(item,field,search)=>{return item[field].startsWith(search);};const getModifiedData=(data,field,condition,conditionRule)=>{let new_data=[];for(let i=0;i<data.length;i++){if(conditionRule(data[i],field,condition)===true)new_data.push(data[i]);}return new_data;};const getFilterData=(data,field,type)=>{return getModifiedData(data,field,type,filterCriteria);};const getSearchData=(data,field,search)=>{return getModifiedData(data,field,search,searchCriteria);};export{getImage,getFilterData,getSearchData};","map":{"version":3,"names":["getImage","file","Promise","resolve","reject","Error","reader","FileReader","readAsDataURL","onload","e","target","result","onerror","error","filterCriteria","item","field","type","searchCriteria","search","startsWith","getModifiedData","data","condition","conditionRule","new_data","i","length","push","getFilterData","getSearchData"],"sources":["C:/Users/Admin1/Desktop/CookingWebsite/my-app/src/Utils/UtilsGeneral.js"],"sourcesContent":["const getImage = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!file) {\r\n      reject(new Error(\"No file provided\"));\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = (e) => {\r\n      resolve(e.target.result);\r\n    };\r\n    reader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n};\r\n\r\n\r\nconst filterCriteria = (item, field, type) =>{\r\n  if(type === '' || type === 'unspecified')\r\n    return true\r\n  else\r\n    return item[field] === type\r\n}\r\n\r\nconst searchCriteria = (item, field, search) => {return item[field].startsWith(search)};\r\n\r\nconst getModifiedData = (data, field, condition, conditionRule) =>{\r\n  let new_data = []\r\n  for(let i=0;i<data.length;i++){\r\n    if(conditionRule(data[i], field, condition) === true)\r\n      new_data.push(data[i])\r\n  }\r\n  return new_data\r\n}\r\n\r\nconst getFilterData = (data, field, type) =>{return getModifiedData(data, field, type, filterCriteria)}\r\nconst getSearchData = (data, field, search) =>{return getModifiedData(data, field, search, searchCriteria)}\r\n\r\nexport {getImage,getFilterData,getSearchData}"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAIC,IAAI,EAAK,CACzB,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,GAAI,CAACH,IAAI,CAAE,CACTG,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CACrC,OACF,CAEA,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,aAAa,CAACP,IAAI,CAAC,CAC1BK,MAAM,CAACG,MAAM,CAAIC,CAAC,EAAK,CACrBP,OAAO,CAACO,CAAC,CAACC,MAAM,CAACC,MAAM,CAAC,CAC1B,CAAC,CACDN,MAAM,CAACO,OAAO,CAAIC,KAAK,EAAK,CAC1BV,MAAM,CAACU,KAAK,CAAC,CACf,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAGD,KAAM,CAAAC,cAAc,CAAGA,CAACC,IAAI,CAAEC,KAAK,CAAEC,IAAI,GAAI,CAC3C,GAAGA,IAAI,GAAK,EAAE,EAAIA,IAAI,GAAK,aAAa,CACtC,MAAO,KAAI,KAEX,OAAO,CAAAF,IAAI,CAACC,KAAK,CAAC,GAAKC,IAAI,CAC/B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAACH,IAAI,CAAEC,KAAK,CAAEG,MAAM,GAAK,CAAC,MAAO,CAAAJ,IAAI,CAACC,KAAK,CAAC,CAACI,UAAU,CAACD,MAAM,CAAC,EAAC,CAEvF,KAAM,CAAAE,eAAe,CAAGA,CAACC,IAAI,CAAEN,KAAK,CAAEO,SAAS,CAAEC,aAAa,GAAI,CAChE,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,IAAI,GAAI,CAAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAACJ,IAAI,CAACK,MAAM,CAACD,CAAC,EAAE,CAAC,CAC5B,GAAGF,aAAa,CAACF,IAAI,CAACI,CAAC,CAAC,CAAEV,KAAK,CAAEO,SAAS,CAAC,GAAK,IAAI,CAClDE,QAAQ,CAACG,IAAI,CAACN,IAAI,CAACI,CAAC,CAAC,CAAC,CAC1B,CACA,MAAO,CAAAD,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAI,aAAa,CAAGA,CAACP,IAAI,CAAEN,KAAK,CAAEC,IAAI,GAAI,CAAC,MAAO,CAAAI,eAAe,CAACC,IAAI,CAAEN,KAAK,CAAEC,IAAI,CAAEH,cAAc,CAAC,EAAC,CACvG,KAAM,CAAAgB,aAAa,CAAGA,CAACR,IAAI,CAAEN,KAAK,CAAEG,MAAM,GAAI,CAAC,MAAO,CAAAE,eAAe,CAACC,IAAI,CAAEN,KAAK,CAAEG,MAAM,CAAED,cAAc,CAAC,EAAC,CAE3G,OAAQnB,QAAQ,CAAC8B,aAAa,CAACC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}